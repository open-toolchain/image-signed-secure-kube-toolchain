---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "Kubernetes-App mit Imageunterzeichnung entwickeln"
template.description: "Mit dieser Toolchain können Sie Anwendungen sicher in einem von IBM Cloud Kubernetes Service verwalteten Kubernetes-Cluster entwickeln und bereitstellen. Für diese Toolchain sind vorkonfigurierte Schlüssel erforderlich. Diese können Sie mit der Vorlage [Key-Management-Admin-Template](https://github.com/open-toolchain/key-management-admin-toolchain) einrichten. Standardmäßig wird für die Toolchain die einfache Node.js-App 'Hello World' verwendet, aber Sie können stattdessen auch eine Verknüpfung zu einem eigenen GitHub-Repository erstellen.Diese Toolchain ist im Kubernetes-Cluster mit einer Docker-Imagesignierung und einer Signaturprüfungsrichtlinie vorkonfiguriert. Dies ermöglicht Continuous Delivery mit [Vulnerability Advisor](https://cloud.ibm.com/docs/services/va?topic=va-va_index), Quellcodeverwaltung, Issue-Verfolgung und Onlinebearbeitung.\n\n Sie können Ihre IBM Cloud Container-Cluster in der [Konsole](https://cloud.ibm.com/kubernetes/clusters) verwalten.\n\nFür diese Toolchain werden Tools verwendet, die Teil des Continuous Delivery-Service sind.Wenn eine Instanz dieses Service sich noch nicht in der ausgewählten Ressourcengruppe oder -organisation befindet, wird sie mit dem kostenlosen [Lite-Plan](/catalog/services/continuous-delivery/), sofern ausgewählt, automatisch hinzugefügt, wenn Sie auf **Erstellen** klicken.\n\nKlicken Sie auf **Erstellen**, um zu beginnen.\n\nSchrittweise Anweisungen finden Sie im [Lernprogramm](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-toolchain)."
template.gettingStarted: " **Ihre Toolchain steht bereit!**\n**Schnelleinstieg:** Schreiben Sie eine Änderung im Git-Repository fest, um einen neuen Build für das Docker-Image auszulösen, der auf Sicherheitslücken geprüft und in Ihrem Kubernetes-Cluster bereitgestellt wird."
deploy.title: "Bereitstellungsphase von Hello World"
deploy.description: "Einfache Toolchain für Hello World"
deploy.longDescription: "Mit Delivery Pipeline werden die kontinuierliche Builderstellung, Tests und Bereitstellungen der Docker-Anwendung automatisiert."
deploy.appDescription: "Der Name Ihrer App"
deploy.appName: "Name der App"
deploy.apikeyDescription: "Der IBM Cloud-API-Schlüssel wird verwendet, um auf die IBM Cloud Kubernetes Service-API zuzugreifen und mit dem Cluster zu interagieren. Sie können einen API-Schlüssel mithilfe des Befehls 'bx iam api-key-create' oder über die Konsole unter https://cloud.ibm.com/iam#/apikeys abrufen, indem Sie auf **API-Schlüssel erstellen** klicken. (Jeder API-Schlüssel kann nur einmal angezeigt werden.)"
deploy.registryRegionDescription: "Die IBM Cloud-Region für die Image-Registry"
deploy.registrynsDescription: "Der Namespace in der Container-Image-Registry. Dieser kann mit [bx cr namespace-add] eingerichtet werden. Weitere Informationen finden Sie unter https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started."
deploy.regionDescription: "Die IBM Cloud-Region für die Produktionsbereitstellung"
deploy.rgDescription: "Die IBM Cloud-Ressourcengruppe für die Produktionsbereitstellung"
deploy.clusterNameDescription: "Der Name des Produktionsclusters. Rufen Sie ihn mit dem Befehl [ibmcloud cs clusters] oder über die Konsole unter https://cloud.ibm.com/kubernetes/clusters ab."
deploy.namespaceDescription: "Produktionsnamespace"
deploy.apikey: "IBM Cloud-API-Schlüssel"
deploy.containerregRegion: "Region für Container-Registry"
deploy.containerregns: "Namespace für Container-Registry"
deploy.imgregRegion: "Region für Container-Image-Registry"
deploy.imgregNs: "Namespace für Container-Image-Registry"
deploy.cluster: "Clustername"
deploy.buildcluster: "Cluster erstellen"
deploy.rg: "Ressourcengruppe"
deploy.buildrg: "Ressourcengruppe erstellen"
deploy.clusterNs: "Cluster-Namespace"
deploy.buildclusterNs: "Cluster-Namespace erstellen"
deploy.clusterDescription: "Rufen Sie den Namen des Kubernetes-Clusters mit dem CLI-Befehl 'ibmcloud cs clusters' oder über die [Konsole](https://cloud.ibm.com/kubernetes/clusters) ab."
deploy.clusternsDescription: "Wenn der Cluster-Namespace nicht bereits vorhanden ist, wird er automatisch erstellt und konfiguriert."
deploy.keyCreation: "Signierschlüssel generieren"
deploy.keyDetails: "Geben Sie den Namen der Key Protect-Instanz an, in der die Signierschlüssel für das Image gespeichert sind. Die Felder für die Build- und Validierungsunterzeichner enthalten Standardnamen für die entsprechenden Unterzeichner. Die Werte müssen mit den Werten übereinstimmen, die in der Schablone Key-Management-Admin-Template erstellt wurden. Weitere Informationen finden Sie in https://github.com/open-toolchain/key-management-admin-toolchain"
deploy.vaultName: "Instanzname der Key Protect-Vault"
deploy.buildSigner: "Docker-Image-Build-Unterzeichner für DevOps"
deploy.validationSigner: "Docker-Image-Validierungsunterzeichner für DevOps"
region: "Clusterregion"
buildregion: "Region erstellen"
organization: "Organisation"
space: "Bereich"
prodStage: "Produktionsumgebung"
headerSVG.think: "NACHDENKEN"
headerSVG.code: "CODIEREN"
headerSVG.deliver: "BEREITSTELLEN"
headerSVG.run: "AUSFÜHREN"
headerSVG.issueTracker: "ISSUE-TRACKER"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "REPOSITORY"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.dctpipeline: "DCT PIPELINE"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "WEB-IDE"
headerSVG.kubernetes: "Kubernetes"
headerSVG.cluster: "Cluster"
headerSVG.bitbucket1: "Bitbucket"
headerSVG.bitbucket2: "Bitbucket"
headerSVG.GitHub1: "GitHub"
headerSVG.GitHub2: "GitHub"
headerSVG.gitlab3: "GitLab"
headerSVG.gitlab4: "GitLab"
