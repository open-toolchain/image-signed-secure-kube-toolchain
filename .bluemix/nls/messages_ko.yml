---
#The format for creating a link with a URL and text is [link text](link url) with no spaces or characters between the two sets of brackets- []()
template.name: "이미지 서명으로 Kubernetes 앱 개발"
template.description: "이 도구 체인을 사용하면 애플리케이션을 개발하고 IBM Cloud Kubernetes Service에서 관리되는 Kubernetes 클러스터에 애플리케이션을 안전하게 배치할 수 있습니다.이 도구 체인에는 [Key-Management-Admin-Template](https://github.com/open-toolchain/key-management-admin-toolchain)를 사용하여 설정할 수 있는 사전 구성된 키가 필요합니다. 기본적으로, 도구 체인은 샘플 Node.js \"Hello World\" 앱을 사용하지만, 대신 자체 GitHub 저장소에 연결할 수 있습니다. 이 도구 체인은 [Vulnerability Advisor](https://cloud.ibm.com/docs/services/va?topic=va-va_index)가 포함된 지속적 딜리버리, 소스 제어, 문제 추적 및 온라인 편집을 사용하여 지속적 딜리버리를 위해 Kubernetes 클러스터의 서명 확인 정책 및 Docker 이미지 서명으로 사전 구성됩니다.\n\n [콘솔](https://cloud.ibm.com/kubernetes/clusters)에서 IBM Cloud Container 클러스터를 관리할 수 있습니다.\n\n이 도구 체인은 지속적 딜리버리 서비스의 일부인 도구를 사용합니다.서비스의 인스턴스가 선택된 리소스 그룹 또는 조직에 아직 없는 경우 **작성**을 클릭하면 무료 [Lite](/catalog/services/continuous-delivery/) 플랜이 선택되어 자동으로 추가됩니다.\n\n시작하려면 **작성**을 클릭하십시오.\n\n단계별 지시사항은 [튜토리얼](https://www.ibm.com/cloud/garage/tutorials/use-develop-kubernetes-app-toolchain)을 참조하십시오."
template.gettingStarted: " **도구 체인이 준비되었습니다!**\n**빠른 시작:** Git 저장소에 대한 변경사항을 커미트하여 새 Docker 이미지 빌드를 트리거하십시오. 취약성이 있는지 스캔한 후에 Kubernetes 클러스터에 배치됩니다."
deploy.title: "Hello World 배치 단계"
deploy.description: "hello-world 단순 도구 체인"
deploy.longDescription: "Delivery Pipeline을 사용하여 Docker 애플리케이션의 지속적인 빌드, 테스트 및 배치를 자동화합니다."
deploy.appDescription: "사용자 앱의 이름"
deploy.appName: "앱 이름"
deploy.apikeyDescription: "IBM Cloud API 키는 IBM Cloud Kubernetes Service API에 액세스하고 클러스터와 상호작용하는 데 사용됩니다. 또한 'bx iam api-key-create'를 사용하거나 https://cloud.ibm.com/iam#/apikeys에서 콘솔을 통해 **API 키 작성**(각 API 키는 한 번만 볼 수 있음)을 클릭하여 API 키를 얻을 수 있습니다."
deploy.registryRegionDescription: "이미지 레지스트리의 IBM Cloud 지역"
deploy.registrynsDescription: "컨테이너 이미지 레지스트리의 네임스페이스입니다. {bx cr namespace-add]로 설정할 수 있습니다. 자세한 사항은 https://cloud.ibm.com/docs/services/Registry?topic=registry-getting-started#getting-started에서 확인하십시오."
deploy.regionDescription: "프로덕션 배치를 위한 IBM Cloud 지역"
deploy.rgDescription: "프로덕션 배치를 위한 IBM Cloud 리소스 그룹"
deploy.clusterNameDescription: "프로덕션 클러스터 이름입니다. [ibmcloud cs clusters]를 사용하거나 https://cloud.ibm.com/kubernetes/clusters에서 콘솔을 통해 검색하십시오."
deploy.namespaceDescription: "프로덕션 네임스페이스"
deploy.apikey: "IBM Cloud API 키"
deploy.containerregRegion: "컨테이너 레지스트리 지역"
deploy.containerregns: "컨테이너 레지스트리 네임스페이스"
deploy.imgregRegion: "컨테이너 이미지 레지스트리 지역"
deploy.imgregNs: "컨테이너 이미지 레지스트리 네임스페이스"
deploy.cluster: "클러스터 이름"
deploy.buildcluster: "클러스터 빌드"
deploy.rg: "리소스 그룹"
deploy.buildrg: "리소스 그룹 빌드"
deploy.clusterNs: "클러스터 네임스페이스"
deploy.buildclusterNs: "클러스터 네임스페이스 빌드"
deploy.clusterDescription: "이 CLI 명령 'ibmcloud cs clusters'를 사용하거나 [콘솔](https://cloud.ibm.com/kubernetes/clusters)을 통해 Kubernetes 클러스터 이름을 검색하십시오."
deploy.clusternsDescription: "클러스터 네임스페이스가 없는 경우, 자동으로 생성되어 구성됩니다."
deploy.keyCreation: "서명 키 생성"
deploy.keyDetails: "이미지 서명 키가 저장된 키 보호 인스턴스 이름을 지정하십시오. 빌드 및 유효성 검증 서명자 필드에 이러한 서명자의 기본 이름이 포함되어 있습니다. 값은 Key-Management-Admin-Template에서 작성된 값과 일치해야 합니다. 다음 링크의 내용을 참조하십시오. https://github.com/open-toolchain/key-management-admin-toolchain"
deploy.vaultName: "키 보호 저장소 인스턴스 이름"
deploy.buildSigner: "DevOps Docker 이미지 빌드 서명자"
deploy.validationSigner: "DevOps Docker 이미지 유효성 검증 서명자"
region: "클러스터 지역"
buildregion: "지역 빌드"
organization: "조직"
space: "영역"
prodStage: "프로덕션 환경"
headerSVG.think: "사고"
headerSVG.code: "코드"
headerSVG.deliver: "전달"
headerSVG.run: "실행"
headerSVG.issueTracker: "문제 트래커"
headerSVG.gitlab1: "GitLab"
headerSVG.repository: "저장소"
headerSVG.gitlab2: "GitLab"
headerSVG.pipeline: "PIPELINE"
headerSVG.dctpipeline: "DCT PIPELINE"
headerSVG.ibmCloud: "IBM Cloud"
headerSVG.bluemix: "BLUEMIX"
headerSVG.webIde: "WEB IDE"
headerSVG.kubernetes: "Kubernetes"
headerSVG.cluster: "클러스터"
headerSVG.bitbucket1: "Bitbucket"
headerSVG.bitbucket2: "Bitbucket"
headerSVG.GitHub1: "GitHub"
headerSVG.GitHub2: "GitHub"
headerSVG.gitlab3: "GitLab"
headerSVG.gitlab4: "GitLab"
